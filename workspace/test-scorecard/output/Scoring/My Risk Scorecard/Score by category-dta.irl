// begin DT Score by category
// -- begin rule 'Score by category 0'
package Scoring.My_Risk_Scorecard {
   use customer;
   rule Score_by_category_0 {
      property ilog.rules.business_name = "Score by category 1";
      property ilog.rules.dt = "Scoring.My Risk Scorecard.Score by category";
      property ilog.rules.group = "Scoring.My_Risk_Scorecard.Score_by_category";
      property ilog.rules.package_name = "Scoring.My Risk Scorecard";
      property status = "new";
      when {
         IlrContext() from ?context;
         evaluate (weight : (0.9d));
         evaluate (maxScore : (80));
         com.ibm.test.Customer() from customer;
         evaluate ((((customer.category.equals(com.ibm.test.Customer.Category.STD)))));
      } then {
         scorecardbom.ScorecardsUtil.addScore(45);
      }
   }
}

// -- end rule 'Score by category 0'
// -- begin rule 'Score by category 1'
package Scoring.My_Risk_Scorecard {
   use customer;
   rule Score_by_category_1 {
      property ilog.rules.business_name = "Score by category 2";
      property ilog.rules.dt = "Scoring.My Risk Scorecard.Score by category";
      property ilog.rules.group = "Scoring.My_Risk_Scorecard.Score_by_category";
      property ilog.rules.package_name = "Scoring.My Risk Scorecard";
      property status = "new";
      when {
         IlrContext() from ?context;
         evaluate (weight : (0.9d));
         evaluate (maxScore : (80));
         com.ibm.test.Customer() from customer;
         evaluate ((((customer.category.equals(com.ibm.test.Customer.Category.VIP)))));
      } then {
         scorecardbom.ScorecardsUtil.addScore(25);
      }
   }
}

// -- end rule 'Score by category 1'
// end DT Score by category
