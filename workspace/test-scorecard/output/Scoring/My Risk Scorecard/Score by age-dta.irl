// begin DT Score by age
// -- begin rule 'Score by age 0'
package Scoring.My_Risk_Scorecard {
   use customer;
   rule Score_by_age_0 {
      property ilog.rules.business_name = "Score by age 1";
      property ilog.rules.dt = "Scoring.My Risk Scorecard.Score by age";
      property ilog.rules.group = "Scoring.My_Risk_Scorecard.Score_by_age";
      property ilog.rules.package_name = "Scoring.My Risk Scorecard";
      property status = "new";
      when {
         IlrContext() from ?context;
         evaluate (weight : (0.9d));
         evaluate (maxScore : (80));
         com.ibm.test.Customer() from customer;
         evaluate (((customer.age <= 35)));
      } then {
         scorecardbom.ScorecardsUtil.addScore(60);
      }
   }
}

// -- end rule 'Score by age 0'
// -- begin rule 'Score by age 1'
package Scoring.My_Risk_Scorecard {
   use customer;
   rule Score_by_age_1 {
      property ilog.rules.business_name = "Score by age 2";
      property ilog.rules.dt = "Scoring.My Risk Scorecard.Score by age";
      property ilog.rules.group = "Scoring.My_Risk_Scorecard.Score_by_age";
      property ilog.rules.package_name = "Scoring.My Risk Scorecard";
      property status = "new";
      when {
         IlrContext() from ?context;
         evaluate (weight : (0.9d));
         evaluate (maxScore : (80));
         com.ibm.test.Customer() from customer;
         evaluate (((customer.age in ]35, 65])));
      } then {
         scorecardbom.ScorecardsUtil.addScore(20);
      }
   }
}

// -- end rule 'Score by age 1'
// -- begin rule 'Score by age 2'
package Scoring.My_Risk_Scorecard {
   use customer;
   rule Score_by_age_2 {
      property ilog.rules.business_name = "Score by age 3";
      property ilog.rules.dt = "Scoring.My Risk Scorecard.Score by age";
      property ilog.rules.group = "Scoring.My_Risk_Scorecard.Score_by_age";
      property ilog.rules.package_name = "Scoring.My Risk Scorecard";
      property status = "new";
      when {
         IlrContext() from ?context;
         evaluate (weight : (0.9d));
         evaluate (maxScore : (80));
         com.ibm.test.Customer() from customer;
         evaluate (((customer.age > 65)));
      } then {
         scorecardbom.ScorecardsUtil.addScore(45);
      }
   }
}

// -- end rule 'Score by age 2'
// end DT Score by age
